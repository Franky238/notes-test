{"version":3,"sources":["app.js","notes.module.js","config/notes.config.js","controllers/notes.note.controller.js","models/notes.note.model.js","services/notes.note.service.js"],"names":[],"mappings":"AAAA,CAAC,UAAU,SAAS;IAChB;;IAEA,IAAI,UAAU;QACV;QACA;;;IAGJ,IAAI,MAAM,QAAQ,OAAO,OAAO;;IAEhC,IAAI,gDAAO,UAAU,gBAAgB,oBAAoB;QACrD,mBAAmB,UAAU,SAAS,WAAW,UAAU;YACvD,UAAU,OAAO,CAAC,UAAU,SAAS,QAAQ;gBACzC,OAAO,GAAG;;;;QAIlB;aACK,MAAM,QAAQ;gBACX,KAAK;;aAER,MAAM,SAAS;gBACZ,KAAK;gBACL,aAAa;;aAEhB,MAAM,UAAU;gBACb,KAAK;gBACL,aAAa;;aAEhB,MAAM,UAAU;gBACb,KAAK;gBACL,aAAa;;;;;;GAM1B,SAAS;ACrCZ,CAAC,UAAU,SAAS;IAChB;;IAEA,QAAQ,OAAO,eAAe;GAC/B,SAAS;ACJZ,CAAC,UAAU,SAAS;IAChB;;IAEA,QAAQ,OAAO;SACV,SAAS,eAAe;WACtB,KAAK;;;GAGb,SAAS;ACRZ,CAAC,UAAU,SAAS;IAChB;;IAEA,QAAQ,OAAO;SACV,WAAW,oEAAuB,UAAU,gBAAgB,QAAQ,cAAc;YAC/E,OAAO,QAAQ;YACf,OAAO,OAAO;YACd,OAAO,UAAU;;YAEjB,OAAO,aAAa,YAAY;gBAC5B,OAAO,QAAQ,YAAY;gBAC3B,OAAO,QAAQ,cAAc;gBAC7B,IAAI,QAAQ,OAAO,QAAQ;;gBAE3B,IAAI,QAAQ,YAAY,UAAU,MAAM,WAAW,GAAG;oBAClD;;;gBAGJ,eAAe,WAAW,OAAO,YAAY;oBACzC,OAAO,QAAQ,cAAc;mBAC9B,YAAY;oBACX,OAAO,QAAQ,YAAY;;;;YAInC,OAAO,YAAY,YAAY;gBAC3B,OAAO,eAAe,UAAU,aAAa,IAAI,UAAU,MAAM;oBAC7D,OAAO,OAAO,OAAO;;;;YAI7B,SAAS,OAAO;gBACZ,eAAe,QAAQ,UAAU,MAAM;oBACnC,OAAO,SAAS;;;;YAIxB;;GAET,SAAS;ACvCZ,CAAC,UAAU,SAAS;IAChB;;IAEA,QAAQ,OAAO;SACV,QAAQ,uCAAkB,UAAU,kBAAkB;;YAEnD,SAAS,QAAQ,UAAU;gBACvB,OAAO,iBAAiB,UAAU,KAAK,UAAU,QAAQ;oBACrD,SAAS,OAAO;;;;YAIxB,SAAS,UAAU,IAAI,UAAU;gBAC7B,OAAO,iBAAiB,UAAU,IAAI,KAAK,UAAU,QAAQ;oBACzD,SAAS,OAAO;;;;YAIxB,SAAS,WAAW,OAAO,SAAS,OAAO;gBACvC,IAAI,UAAU;oBACV,OAAO;;;gBAGX,iBAAiB,WAAW,SAAS,KAAK,YAAY;oBAClD,OAAO,QAAQ,YAAY,cAAc;mBAC1C,YAAY;oBACX,OAAO,QAAQ,UAAU,cAAc;;;;YAI/C,OAAO;gBACH,SAAS;gBACT,WAAW;gBACX,YAAY;;;GAGzB,SAAS;ACpCZ,CAAC,UAAU,SAAS;IAChB;;IAEA,QAAQ,OAAO;SACV,QAAQ,6CAAoB,UAAU,aAAa,OAAO;;YAEvD,SAAS,UAAU;gBACf,OAAO,MAAM,IAAI,YAAY,MAAM;;;YAGvC,SAAS,UAAU,IAAI;gBACnB,OAAO,MAAM,IAAI,YAAY,MAAM,YAAY;;;YAGnD,SAAS,WAAW,SAAS,SAAS;gBAClC,IAAI,UAAU,WAAW,CAAC,SAAS,CAAC,gBAAgB;;gBAEpD,OAAO,MAAM,KAAK,YAAY,MAAM,UAAU,SAAS;;;YAG3D,OAAO;gBACH,SAAS;gBACT,WAAW;gBACX,YAAY;;;GAGzB,SAAS","file":"app.js","sourcesContent":["(function (angular) {\n    'use strict';\n\n    var modules = [\n        'ui.router',\n        'NotesModule'\n    ];\n\n    var app = angular.module('app', modules);\n\n    app.config(function ($stateProvider, $urlRouterProvider) {\n        $urlRouterProvider.otherwise(function($injector, $location){\n            $injector.invoke(['$state', function($state) {\n                $state.go('home');\n            }]);\n        });\n\n        $stateProvider\n            .state('home', {\n                url: \"\"\n            })\n            .state('notes', {\n                url: '^/notes',\n                templateUrl: 'src/app/module/notes/partials/notes.list.partial.html'\n            })\n            .state('detail', {\n                url: '/notes/{id:int}',\n                templateUrl: 'src/app/module/notes/partials/notes.detail.partial.html'\n            })\n            .state('create', {\n                url: '^/notes/create',\n                templateUrl: 'src/app/module/notes/partials/notes.create.partial.html'\n            })\n        ;\n\n    });\n\n})(angular);","(function (angular) {\n    'use strict';\n\n    angular.module('NotesModule', []);\n})(angular);","(function (angular) {\n    'use strict';\n\n    angular.module('NotesModule')\n        .constant('NotesConfig', {\n           URL: 'https://private-anon-0ce9bf9b39-note10.apiary-mock.com'\n        });\n\n})(angular);","(function (angular) {\n    'use strict';\n\n    angular.module('NotesModule')\n        .controller('NotesNoteController', function (NotesNoteModel, $scope, $stateParams) {\n            $scope.notes = [];\n            $scope.note = {};\n            $scope.newNote = {};\n\n            $scope.createNote = function () {\n                $scope.newNote.errorSend = false;\n                $scope.newNote.successSend = false;\n                var title = $scope.newNote.title;\n\n                if (angular.isUndefined(title) || title.length === 0) {\n                    return;\n                }\n\n                NotesNoteModel.createNote(title, function () {\n                    $scope.newNote.successSend = true;\n                }, function () {\n                    $scope.newNote.errorSend = true;\n                });\n            };\n\n            $scope.getDetail = function () {\n                return NotesNoteModel.getDetail($stateParams.id, function (data) {\n                    return $scope.note = data;\n                });\n            };\n\n            function init() {\n                NotesNoteModel.getList(function (data) {\n                    $scope.notes =  data;\n                });\n            }\n\n            init();\n        });\n})(angular);","(function (angular) {\n    'use strict';\n\n    angular.module('NotesModule')\n        .factory('NotesNoteModel', function (NotesNoteService) {\n\n            function getList(callback) {\n                return NotesNoteService.getList().then(function (result) {\n                    callback(result.data);\n                });\n            }\n\n            function getDetail(id, callback) {\n                return NotesNoteService.getDetail(id).then(function (result) {\n                    callback(result.data);\n                });\n            }\n\n            function createNote(title, success, error) {\n                var options = {\n                    title: title\n                };\n\n                NotesNoteService.createNote(options).then(function () {\n                    return typeof  success === 'function' && success();\n                }, function () {\n                    return typeof  error === 'function' && error();\n                });\n            }\n\n            return {\n                getList: getList,\n                getDetail: getDetail,\n                createNote: createNote\n            }\n        });\n})(angular);","(function (angular) {\n    'use strict';\n\n    angular.module('NotesModule')\n        .factory('NotesNoteService', function (NotesConfig, $http) {\n\n            function getList() {\n                return $http.get(NotesConfig.URL + '/notes');\n            }\n\n            function getDetail(id) {\n                return $http.get(NotesConfig.URL + '/notes/' + id);\n            }\n\n            function createNote(payload, options) {\n                var options = options || {headers: {'Content-Type': 'application/json'}};\n\n                return $http.post(NotesConfig.URL + '/notes', payload, options);\n            }\n\n            return {\n                getList: getList,\n                getDetail: getDetail,\n                createNote: createNote\n            }\n        });\n})(angular);"],"sourceRoot":"/source/"}